{"version":3,"sources":["components/Card/Card.js"],"names":["Card","props","state","detailShow","list","this","setState","addItem","arr","i","setTimeout","s","slice","push","length","className","join","size","type","title","defaultStyle","x","style","spring","stiffness","damping","value","Math","floor","prefix","onClick","changeDetail","bind","map","r","index","classNames","timeout","React","Component"],"mappings":"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","file":"static/js/4.ea6e219d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.less'\r\nimport {Button, Divider, Statistic, Tooltip} from \"antd\";\r\nimport {BookTwoTone, EyeTwoTone, HeartTwoTone, InfoCircleOutlined} from \"@ant-design/icons\";\r\nimport {Motion, spring} from \"react-motion\";\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\n\r\nexport default class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailShow: false,\r\n            list: []\r\n        }\r\n    }\r\n    changeDetail() {\r\n        if (!this.state.detailShow) {\r\n            this.setState({detailShow:true,list:[]})\r\n            this.addItem(['1', '12', '1231123', '123723', '123a12323', '123233534', '12234'])\r\n        }else{\r\n            this.setState({detailShow:false})\r\n        }\r\n    }\r\n    addItem(arr) {\r\n        for (let i=0; i < arr.length; i++) {\r\n            setTimeout(() => {\r\n                setTimeout(() => {\r\n                    const s = this.state.list.slice();\r\n                    s.push(arr[i]);\r\n                    this.setState({list: s})\r\n                }, i * 100)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CardBox\">\r\n                <div className={[\"Card\", this.state.detailShow ? \"CardTop\" : \"\"].join(\" \")}>\r\n                    <div className=\"title\">\r\n                        <Button size='large' type='link'>CSDN</Button>\r\n                        <div className=\"right\">\r\n                            <Tooltip title=\"我的博客\">\r\n                                <InfoCircleOutlined/>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"statis\">\r\n                        <Motion defaultStyle={{x: 0}} style={{x: spring(1128, {stiffness: 120, damping: 70})}}>\r\n                            {value => <Statistic title=\"阅读量\" value={Math.floor(value.x)} prefix={<EyeTwoTone/>}/>}\r\n                        </Motion>\r\n                        <Motion defaultStyle={{x: 0}} style={{x: spring(30, {stiffness: 20, damping: 10})}}>\r\n                            {value => <Statistic title=\"文章数\" value={Math.floor(value.x)} prefix={<BookTwoTone/>}/>}\r\n                        </Motion>\r\n                        <Motion defaultStyle={{x: 0}} style={{x: spring(11, {stiffness: 20, damping: 10})}}>\r\n                            {value => <Statistic title=\"收藏数\" value={Math.floor(value.x)} prefix={<HeartTwoTone/>}/>}\r\n                        </Motion>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"bottom\">\r\n                        <div className=\"left\">\r\n                            博文数据\r\n                        </div>\r\n                        <Button type='link' onClick={this.changeDetail.bind(this)}>切换文章列表</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={[\"CardList\", this.state.detailShow ? \"CardTop\" : \"\"].join(\" \")}>\r\n                    <div className=\"title\">\r\n                        <Button size='large' type='link'>最新博文</Button>\r\n                        <div className=\"right\">\r\n                            <Tooltip title=\"最新的博文列表\">\r\n                                <InfoCircleOutlined/>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"list\">\r\n                        <TransitionGroup>\r\n                            {this.state.list.map((r, index) =>\r\n                                <CSSTransition key={r} classNames='listEnter' timeout={500}>\r\n                                    <div className='listItemBox'>\r\n                                        <p className=\"listItem\">{index + 1}、{r}</p>\r\n                                        <span>2021-1-1</span>\r\n                                    </div>\r\n                                </CSSTransition>\r\n                            )}\r\n                        </TransitionGroup>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"bottom\">\r\n                        <div className=\"left\">\r\n                            博文条目\r\n                        </div>\r\n                        <Button type='link' onClick={this.changeDetail.bind(this)}>切换博文数据</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"],"sourceRoot":""}