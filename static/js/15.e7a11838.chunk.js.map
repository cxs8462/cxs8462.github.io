{"version":3,"sources":["components/Card/Card.js"],"names":["Card","props","state","detailShow","list","count","read","article","Favorites","this","getData","db","collection","get","then","r","setState","data","addItem","slice","arr","i","setTimeout","s","push","length","url","window","open","className","join","size","type","onClick","goArticle","bind","title","defaultStyle","x","style","spring","stiffness","damping","value","Math","floor","prefix","changeDetail","map","index","classNames","timeout","time","Input","height","active","marginTop","React","Component","connect"],"mappings":"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","file":"static/js/15.e7a11838.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.less'\r\nimport {Button, Divider, Skeleton, Statistic, Tooltip} from \"antd\";\r\nimport {BookTwoTone, EyeTwoTone, HeartTwoTone, InfoCircleOutlined} from \"@ant-design/icons\";\r\nimport {Motion, spring} from \"react-motion\";\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\nimport {connect} from \"react-redux\";\r\n\r\nclass Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailShow: false,\r\n            list: [],\r\n            count:{\r\n                read:0,\r\n                article:0,\r\n                Favorites:0\r\n            }\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getData();\r\n    }\r\n\r\n    getData(){\r\n        this.props.db.collection(\"CSDN\").get().then(r=>{\r\n            this.setState({\r\n                count: {...r.data[0]}\r\n            })\r\n        })\r\n    }\r\n\r\n    changeDetail() {\r\n        if (!this.state.detailShow) {\r\n            this.setState({detailShow: true, list: []})\r\n            this.props.db.collection(\"CSDN\").get().then(r=>{\r\n                this.addItem(r.data[1].list.slice(0,7))\r\n            })\r\n        } else {\r\n            this.setState({detailShow: false})\r\n        }\r\n    }\r\n\r\n    addItem(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            setTimeout(() => {\r\n                const s = this.state.list.slice();\r\n                s.push(arr[i]);\r\n                this.setState({list: s})\r\n            }, i * 100)\r\n        }\r\n    }\r\n    goArticle(url){\r\n        window.open(url)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CardBox\">\r\n                <div className={[\"Card\", this.state.detailShow ? \"CardTop\" : \"\"].join(\" \")}>\r\n                    <div className=\"title\">\r\n                        <Button size='large' type='link' onClick={this.goArticle.bind(this,\"https://blog.csdn.net/ZuoZuoDangerou\")}>CSDN</Button>\r\n                        <div className=\"right\">\r\n                            <Tooltip title=\"我的博客\">\r\n                                <InfoCircleOutlined/>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"statis\">\r\n                        <Motion defaultStyle={{x: 0}} style={{x: spring(this.state.count.read, {stiffness: 120, damping: 70})}}>\r\n                            {value => <Statistic title=\"阅读量\" value={Math.floor(value.x)} prefix={<EyeTwoTone/>}/>}\r\n                        </Motion>\r\n                        <Motion defaultStyle={{x: 0}} style={{x: spring(this.state.count.article, {stiffness: 20, damping: 10})}}>\r\n                            {value => <Statistic title=\"文章数\" value={Math.floor(value.x)} prefix={<BookTwoTone/>}/>}\r\n                        </Motion>\r\n                        <Motion defaultStyle={{x: 0}} style={{x: spring(this.state.count.Favorites, {stiffness: 20, damping: 10})}}>\r\n                            {value => <Statistic title=\"收藏数\" value={Math.floor(value.x)} prefix={<HeartTwoTone/>}/>}\r\n                        </Motion>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"bottom\">\r\n                        <div className=\"left\">\r\n                            博文数据\r\n                        </div>\r\n                        <Button type='link' onClick={this.changeDetail.bind(this)}>切换文章列表</Button>\r\n                    </div>\r\n                </div>\r\n                <div className={[\"CardList\", this.state.detailShow ? \"CardTop\" : \"\"].join(\" \")}>\r\n                    <div className=\"title\">\r\n                        <Button size='large' type='link'>最新博文</Button>\r\n                        <div className=\"right\">\r\n                            <Tooltip title=\"最新的博文列表\">\r\n                                <InfoCircleOutlined/>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"list\">\r\n                        {this.state.list.length?\r\n                            <TransitionGroup>\r\n                                {this.state.list.map((r, index) =>\r\n                                    <CSSTransition key={r.title} classNames='listEnter' timeout={500}>\r\n                                        <div className='listItemBox'>\r\n                                            <p onClick={this.goArticle.bind(this,r.url)} className=\"listItem\">{index + 1}、{r.title}</p>\r\n                                            <span>{r.time}</span>\r\n                                        </div>\r\n                                    </CSSTransition>\r\n                                )}\r\n                            </TransitionGroup>\r\n                            :\r\n                            <div className='enty'>\r\n                                <Skeleton.Input style={{ height:'20px' }} active />\r\n                                <Skeleton.Input style={{ marginTop:'5px',height:'20px' }} active />\r\n                                <Skeleton.Input style={{ marginTop:'5px',height:'20px' }} active />\r\n                                <Skeleton.Input style={{ marginTop:'5px',height:'20px' }} active />\r\n                                <Skeleton.Input style={{ marginTop:'5px',height:'20px' }} active />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <Divider className='fgx'/>\r\n                    <div className=\"bottom\">\r\n                        <div className=\"left\">\r\n                            博文条目\r\n                        </div>\r\n                        <Button type='link' onClick={this.changeDetail.bind(this)}>切换博文数据</Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst state = state=>({db: state.db})\r\n\r\nexport default connect(state,null)(Card)\r\n"],"sourceRoot":""}